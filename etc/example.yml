training:
    trainer:
        type: keras
    optimizer:
        type: adam
        learning_rate:
            type: piecewise
            boundaries: [93]  # Change learning rate after 93 batches (3 epochs in this case)
            values: [1.0e-2, 1.0e-3]
    num_epochs: 10
    validation_frequency: 1 file
loader:
    type: file
    filenames: [ "data/air_temperature/5GB/202003*T*Z.nc"]
    # normalization: "data/air_temperature/normalization.yml"
    cache_size: 2
    predict_diff: True
    batch_size: 1
    prefetch: 1
    num_parallel_calls: 1
    debug: False
loader_validation:
    type: file
    filenames: ["data/air_temperature/5GB/20210201T*Z.nc"]
    # normalization: "data/air_temperature/normalization.yml"
    cache_size: 200
    predict_diff: True
    batch_size: 1
    prefetch: 1
    num_parallel_calls: 1
    debug: False
loader_test:
    type: file
    filenames: ["data/air_temperature/5GB/202103*T*Z.nc"]
    cache_size: 0
    predict_diff: True
    batch_size: 1
    prefetch: 1
    num_parallel_calls: 1
    debug: False
models:
    - type: BasicBenchmark
      name: cnn
      leadtime_dependent: False
      neighbourhood_size: 3
      filter_sizes: [12, 5, 5]
    - type: BasicBenchmark
      name: cnn_l5
      leadtime_dependent: False
      neighbourhood_size: 3
      filter_sizes: [12, 5, 5, 5, 5]
    - type: BasicBenchmark
      name: cnn_l5_r5
      leadtime_dependent: False
      neighbourhood_size: 5
      filter_sizes: [12, 5, 5, 5, 5]
    - type: BasicBenchmark
      name: cnn_lt
      leadtime_dependent: True
      neighbourhood_size: 3
      filter_sizes: [12, 5, 5]
    - type: BasicBenchmark
      name: cnn_norm
      leadtime_dependent: False
      neighbourhood_size: 3
      filter_sizes: [12, 5, 5]
      batch_normalization: True
    - type: Regression
      name: regression
    - type: Regression
      name: regression_lt
      leadtime_dependent: True
    - type: Unet
      name: unet
      levels: 3
      with_leadtime: False
    - type: Unet
      name: unet_lt
      with_leadtime: True
output:
    quantiles: [0.5, 0.1, 0.9]
loss:
    type: quantile_score
evaluators:
    - type: aggregator
tensorflow:
    num_threads: 2
